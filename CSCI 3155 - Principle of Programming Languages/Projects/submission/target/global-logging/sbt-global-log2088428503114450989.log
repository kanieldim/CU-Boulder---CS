[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\DANIEL~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\DANIEL~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.0 (Oracle Corporation Java 1.8.0_261)
[debug]       Load.loadUnit: plugins took 935.6277ms
[debug]       Load.loadUnit: defsScala took 1.7824ms
[debug] [Loading] Scanning directory C:\Users\Daniel Kim\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Daniel Kim\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 96.9765 ms
[debug]           Load.resolveProject(global-plugins) took 244.1244ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Daniel Kim\.sbt\1.0\plugins, plugins: List(<none>))) took 504.553ms
[debug] [Loading] Done in C:\Users\Daniel Kim\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 677.2641ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.849ms
[debug]     Load.loadUnit(file:/C:/Users/Daniel%20Kim/.sbt/1.0/plugins/, ...) took 1654.8458ms
[debug]   Load.apply: load took 2452.7828ms
[debug]   Load.apply: resolveProjects took 25.4461ms
[debug]   Load.apply: finalTransforms took 315.4623ms
[debug]   Load.apply: config.delegates took 55.0582ms
[debug]   Load.apply: Def.make(settings)... took 11361.7708ms
[debug]   Load.apply: structureIndex took 610.1445ms
[debug]   Load.apply: mkStreams took 7.9906ms
[info] loading global plugins from C:\Users\Daniel Kim\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 23231.4738ms
[debug]           Load.loadUnit: plugins took 94.5876ms
[debug]           Load.loadUnit: defsScala took 0.0067ms
[debug] [Loading] Scanning directory C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission\project
[debug]             Load.loadUnit: mkEval took 21.6392ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 6.9298 ms
[info] loading settings for project submission-build from idea1.sbt ...
[debug]               Load.resolveProject(submission-build) took 22.0648ms
[debug]             Load.loadTransitive: finalizeProject(Project(id submission-build, base: C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission\project, plugins: List(<none>))) took 30.1286ms
[debug] [Loading] Done in C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission\project, returning: (submission-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7784.339ms
[debug]           Load.loadUnit: cleanEvalClasses took 16.5173ms
[debug]         Load.loadUnit(file:/C:/Users/Daniel%20Kim/Documents/CU%20Fall%202020/PPL/Projects/submission/project/, ...) took 7898.6498ms
[debug]       Load.apply: load took 7904.2879ms
[debug]       Load.apply: resolveProjects took 0.3014ms
[debug]       Load.apply: finalTransforms took 42.64ms
[debug]       Load.apply: config.delegates took 1.3119ms
[debug]       Load.apply: Def.make(settings)... took 383.3758ms
[debug]       Load.apply: structureIndex took 122.0417ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 16011.4006ms
[debug]     Load.loadUnit: defsScala took 0.0081ms
[debug] [Loading] Scanning directory C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission
[debug]       Load.loadUnit: mkEval took 0.9728ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.974 ms
[info] loading settings for project submission from build.sbt ...
[debug]         Load.resolveProject(submission) took 77.3014ms
[debug]       Load.loadTransitive: finalizeProject(Project(id submission, base: C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission, plugins: List(<none>))) took 86.6139ms
[debug] [Loading] Done in C:\Users\Daniel Kim\Documents\CU Fall 2020\PPL\Projects\submission, returning: (submission)
[debug]     Load.loadUnit: loadedProjectsRaw took 2803.4511ms
[debug]     Load.loadUnit: cleanEvalClasses took 29.3057ms
[debug]   Load.loadUnit(file:/C:/Users/Daniel%20Kim/Documents/CU%20Fall%202020/PPL/Projects/submission/, ...) took 18845.4643ms
[debug] Load.apply: load took 18848.6293ms
[debug] Load.apply: resolveProjects took 0.678ms
[debug] Load.apply: finalTransforms took 56.6086ms
[debug] Load.apply: config.delegates took 0.6369ms
[debug] Load.apply: Def.make(settings)... took 156.2858ms
[debug] Load.apply: structureIndex took 53.0275ms
[debug] Load.apply: mkStreams took 0.0048ms
[info] set current project to submission (in build file:/C:/Users/Daniel%20Kim/Documents/CU%20Fall%202020/PPL/Projects/submission/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51152 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51152, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to submission (in build file:/C:/Users/Daniel%20Kim/Documents/CU%20Fall%202020/PPL/Projects/submission/)
[debug] > Exec(idea-shell, None, None)
